import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class AccountTest {

    private Account account;

    @BeforeEach
    public void setUp() {
        account = new Account();
    }

    @Test
    public void testSetAndGetRECORD_ID() {
        account.setRECORD_ID(123);
        assertEquals(123, account.getRECORD_ID());
    }

    @Test
    public void testSetAndGetRECORD_NUMBER() {
        account.setRECORD_NUMBER(5);
        assertEquals(5, account.getRECORD_NUMBER());
    }

    @Test
    public void testSetAndGetRECORD_TYPE() {
        account.setRECORD_TYPE("Type1");
        assertEquals("Type1", account.getRECORD_TYPE());
    }

    @Test
    public void testSetAndGetTRACKING_NUMBER() {
        account.setTRACKING_NUMBER("TN123");
        assertEquals("TN123", account.getTRACKING_NUMBER());
    }

    @Test
    public void testSetAndGetSEARCH_START_DATE() {
        account.setSEARCH_START_DATE("2024-01-01");
        assertEquals("2024-01-01", account.getSEARCH_START_DATE());
    }

    @Test
    public void testSetAndGetSEARCH_END_DATE() {
        account.setSEARCH_END_DATE("2024-12-31");
        assertEquals("2024-12-31", account.getSEARCH_END_DATE());
    }

    @Test
    public void testSetAndGetACCOUNT_NUMBER() {
        account.setACCOUNT_NUMBER("ACC123");
        assertEquals("ACC123", account.getACCOUNT_NUMBER());
    }

    @Test
    public void testSetAndGetRECORD_DATE() {
        account.setRECORD_DATE("2024-10-23");
        assertEquals("2024-10-23", account.getRECORD_DATE());
    }

    @Test
    public void testSetAndGetRECORD_STATUS() {
        account.setRECORD_STATUS("Active");
        assertEquals("Active", account.getRECORD_STATUS());
    }

    @Test
    public void testSetAndGetRECORD_COUNT() {
        account.setRECORD_COUNT(10);
        assertEquals(10, account.getRECORD_COUNT());
    }

    @Test
    public void testSetAndGetPROCESS_START_TIME() {
        account.setPROCESS_START_TIME("10:00 AM");
        assertEquals("10:00 AM", account.getPROCESS_START_TIME());
    }

    @Test
    public void testSetAndGetPROCESS_END_TIME() {
        account.setPROCESS_END_TIME("11:00 AM");
        assertEquals("11:00 AM", account.getPROCESS_END_TIME());
    }

    @Test
    public void testSetAndGetRECORD_ID_FLAG() {
        account.setRECORD_ID_FLAG(true);
        assertTrue(account.isRECORD_ID_FLAG());
    }

    @Test
    public void testSetAndGetSEARCH_TERM() {
        account.setSEARCH_TERM("Search");
        assertEquals("Search", account.getSEARCH_TERM());
    }

    @Test
    public void testEquals() {
        Account anotherAccount = new Account();
        anotherAccount.setRECORD_ID(1);
        account.setRECORD_ID(1);
        assertEquals(account, anotherAccount);
    }

    @Test
    public void testNotEquals() {
        Account anotherAccount = new Account();
        anotherAccount.setRECORD_ID(2);
        account.setRECORD_ID(1);
        assertNotEquals(account, anotherAccount);
    }

    @Test
    public void testHashCode() {
        account.setRECORD_ID(1);
        account.setACCOUNT_NUMBER("ACC123");
        int expectedHashCode = Objects.hash(1, "ACC123", "", 1, "", "", 0, "", "", "", false, "", "");
        assertEquals(expectedHashCode, account.hashCode());
    }

    @Test
    public void testToString() {
        account.setRECORD_ID(1);
        account.setACCOUNT_NUMBER("ACC123");
        String expectedString = "Account [RECORD_ID=1, RECORD_NUMBER=1, RECORD_TYPE=null, TRACKING_NUMBER=, SEARCH_START_DATE=null, SEARCH_END_DATE=null, ACCOUNT_NUMBER=ACC123, RECORD_DATE=null, RECORD_STATUS=null, RECORD_COUNT=0, PROCESS_START_TIME=null, PROCESS_END_TIME=null, RECORD_ID_FLAG=false, SEARCH_TERM=null]";
        assertEquals(expectedString, account.toString());
    }
}
